paste0(FOLDER,"/","GWAS.png")
FOLDER="/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data/images"
cor2pval = function(cc,nn)
{
zz = atanh(cc) * sqrt(nn-3)
pnorm(-abs(zz))*2
}
cor2pval(0.1,5700)
cor2pval(-0.1,5700)
cor2pval(-0.1,570)
cor2pval(0.1,570)
#| echo: false
FOLDER="/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data/images"
knitr::include_graphics(paste0(FOLDER,"/","2024-03-27-multiple-testing/multiple-testing-xkcd.com-882-I.png"))
0.95^2
0.95^10
0.95^20
0.95^100
system(glue("wget -P {DATA} https://www.ebi.ac.uk/gwas/api/search/downloads/full"))
suppressMessages(library(tidyverse))
suppressMessages(library(glue))
##PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
PRE="~/Downloads/"
DATA = glue("{PRE}/2024-04-10-gwas-catalog-analysis-2022")
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
WORK=DATA
## download data from GWAS catalog
## https://www.ebi.ac.uk/gwas/docs/file-downloads
system(glue("wget -P {DATA} https://www.ebi.ac.uk/gwas/api/search/downloads/full"))
# - [ ] make sure the DATAFILE name is the same as the one you just downloaded
# DATAFILE = "gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv"
DATAFILE="full"
# - [ ] make sure the DATAFILE name is the same as the one you just downloaded
# DATAFILE = "gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv"
DATAFILE="full"
filename = glue("{DATA}/{DATAFILE}")
if(!file.exists(filename)) system(glue("wget -P {DATA} https://www.ebi.ac.uk/gwas/api/search/downloads/full"))
gwascatalog = read_tsv(filename)
dim(gwascatalog)
names(gwascatalog)
## show number of entries in the GWAS catalog with cancer
gwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl("cancer",`DISEASE/TRAIT`)) %>% dim()
gwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl("cancer",`DISEASE/TRAIT`)) %>% unique() %>% dim()
suppressMessages(library(tidyverse))
suppressMessages(library(RSQLite))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
DATA="2021-04-21-personal-genomes-project-data/"
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
suppressMessages(library(tidyverse))
suppressMessages(library(RSQLite))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
DATA="2021-04-21-personal-genomes-project-data/"
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
WORK=DATA
WORK
suppressMessages(library(tidyverse))
suppressMessages(library(RSQLite))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
DATA=glue("2021-04-21-personal-genomes-project-data/")
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
sqlite <- dbDriver("SQLite")
dbname <- paste0(DATA,"repgp-data.sqlite3") ##This is just to create the file path to the sqlite3 file
## connect to db
db = dbConnect(sqlite, dbname)
## list tables
dbListTables(db)
system(glue("open {DATA}"))
DATA
PRE
system(glue("open {PRE}"))
suppressMessages(library(tidyverse))
suppressMessages(library(RSQLite))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
DATA=glue("{PRE}/2021-04-21-personal-genomes-project-data/")
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
sqlite <- dbDriver("SQLite")
system(glue("open {DATA}"))
dbname
PRE
PRE=="/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data/"
PRE=="/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
suppressMessages(library(tidyverse))
suppressMessages(library(RSQLite))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
DATA=glue("{PRE}/2021-04-21-personal-genomes-project-data/Lab-personal-genomes-project-data")
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
system(glue("open {DATA}"))
sqlite <- dbDriver("SQLite")
dbname <- paste0(DATA,"repgp-data.sqlite3") ##This is just to create the file path to the sqlite3 file
dbname
## connect to db
db = dbConnect(sqlite, dbname)
## list tables
dbListTables(db)
dbname=="/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data/2021-04-21-personal-genomes-project-data/Lab-personal-genomes-project-data/repgp-data.sqlite3"
dbname
dbname <- paste0(DATA,"/repgp-data.sqlite3") ##This is just to create the file path to the sqlite3 file
## connect to db
db = dbConnect(sqlite, dbname)
## list tables
dbListTables(db)
dbListFields(db,"users")
query <- function(...) dbGetQuery(db, ...)
users = query("select * from users")
names(users)
head(users)
users %>% count(race)
users  %>% count(gender)
users %>% count(blood)
fam = read_tsv(glue::glue("{DATA}/repgp.fam"),col_names = FALSE)
names(fam)[1:2] = c("FID","IID")
fam <- fam %>% select(FID, IID) %>% inner_join(users %>% select(sample,height,weight,gender), by=c("IID"="sample"))
write_tsv(fam,file=glue::glue("{DATA}/phenodata.txt"))
head(fam)
head(users)
head(fam)
users %>% ggplot(aes(height,fill=gender)) + geom_density(alpha=0.6) + ggtitle("Height by gender - Missing gender, *, has bi-modal distr.")
cd $DATA
dbListFields(db,"users")
query <- function(...) dbGetQuery(db, ...)
users = query("select * from users")
names(users)
users %>% count(race)
users  %>% count(gender)
users %>% count(blood)
users %>% ggplot(aes(height,fill=gender)) + geom_density(alpha=0.6) + ggtitle("Height by gender - Missing gender, *, has bi-modal distr.")
users %>% ggplot(aes(height,fill=gender)) + geom_density(alpha=0.6) + ggtitle("Height by gender - Missing gender, *, has bi-modal distr.") + theme_minimal(base_size = 15)
fam = read_tsv(glue::glue("{DATA}/repgp.fam"),col_names = FALSE)
names(fam)[1:2] = c("FID","IID")
fam <- fam %>% select(FID, IID) %>% inner_join(users %>% select(sample,height,weight,gender), by=c("IID"="sample"))
write_tsv(fam,file=glue::glue("{DATA}/phenodata.txt"))
4500*4
4500*5
install.packages("svglite")
library(svglite)
svglite("test.svg")
plot(1:10, 1:10, main="Test Plot")
dev.off()
getwd()
system(glue("open {getwd()}"))
system(glue::glue("open {getwd()}"))
# Load necessary library
library(ggplot2)
# Load the iris dataset
data("iris")
# Create a scatter plot of petal length vs petal width
plot <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Species)) +
geom_point() +
labs(title = "Petal Length vs Petal Width by Species",
x = "Petal Length (cm)",
y = "Petal Width (cm)") +
theme_minimal()
# Save the plot as an SVG file
ggsave("iris_plot.svg", plot, width = 10, height = 8, units = "cm")
ggsave("iris_plot.pdf", plot, width = 10, height = 8, units = "cm")
suppressMessages(library(tidyverse))
suppressMessages(library(glue))
##PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
PRE="~/Downloads/"
DATA = glue("{PRE}/2024-04-10-gwas-catalog-analysis-2022")
if(!file.exists(DATA)) system(glue("mkdir -p {DATA}"))
WORK=DATA
## download data from GWAS catalog
## https://www.ebi.ac.uk/gwas/docs/file-downloads
# - [ ] make sure the DATAFILE name is the same as the one you just downloaded
# DATAFILE = "gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv"
DATAFILE="full"
filename = glue("{DATA}/{DATAFILE}")
if(!file.exists(filename)) system(glue("wget -P {DATA} https://www.ebi.ac.uk/gwas/api/search/downloads/full"))
gwascatalog = read_tsv(filename)
dim(gwascatalog)
names(gwascatalog)
## show number of entries in the GWAS catalog with cancer
gwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl("cancer",`DISEASE/TRAIT`)) %>% dim()
gwascatalog %>% select(`DISEASE/TRAIT`, MAPPED_GENE) %>% filter(grepl("cancer",`DISEASE/TRAIT`)) %>% unique() %>% dim()
## plot histogram of GWAS loci by year
gwascat_sig = gwascatalog %>% mutate(year=as.factor(lubridate::year(lubridate::as_date(`DATE ADDED TO CATALOG`)))) %>% filter(`P-VALUE`<5e-8)
gwascat_sig %>% filter(year!="2023") %>% ggplot(aes(year)) + geom_bar() + theme_bw(base_size = 15) + scale_x_discrete(breaks=c("2008","2012","2016","2020","2022")) + xlab("year") + ylab("GWAS loci reported p<5e-8") + ggtitle("GWAS Catalog Downloaded 2023-06-14")
##ggsave(glue::glue("{DATA}/gwas-catalog/gwas-catalog-by-year.pdf"))
gwascat_sig %>% filter(year!="2024") %>% ggplot(aes(year)) + geom_bar() + theme_bw(base_size = 15) + scale_x_discrete(breaks=c("2008","2012","2016","2020","2022")) + xlab("year") + ylab("GWAS loci reported p<5e-8") + ggtitle("GWAS Catalog Downloaded 2023-06-14")
gwascat_sig %>% filter(year=="2024") %>% dim
filename
DOWNLOAD_DATE="2024-04-10"
gwascat_sig %>% filter(year!="2024") %>% ggplot(aes(year)) + geom_bar() + theme_bw(base_size = 15) + scale_x_discrete(breaks=c("2008","2012","2016","2020","2022")) + xlab("year") + ylab("GWAS loci reported p<5e-8") + ggtitle(paste0("GWAS Catalog Downloaded ",DOWNLOAD_DATE) )
?reticulate::install_miniconda
40*52
40*52*.1
28,625/208
28625/208
getwd()
